{"version":3,"sources":["game.js","App.js","index.js"],"names":["DEFAULT_GAME_OPTIONS","rows","cols","mines","createValues","R","map","fill","resetGame","state","options","started","stopped","minesLeft","_cellsLeft","_values","field","row","openCell","col","r","Math","floor","random","c","around","r1","c1","placeMines","cellState","value","newState","Date","now","won","markCell","cell","minesDiff","revealAll","ri","ci","fn","MessageBox","children","onClose","className","onClick","GameTime","update","hooks","React","useEffect","tid","setInterval","clearInterval","time","ts","s","toString","m","h","ss","length","filter","Boolean","join","formatTime","GameOptions","onChange","useState","req","yup","required","min","max","test","this","parent","validationSchema","renderField","name","label","type","component","initialValues","onSubmit","ReactDOM","render","gameOptions","setGameOptions","useLogic","reset","open","mark","game","gameActions","modalOpened","showModal","prevModalOpened","opts","onContextMenu","ev","preventDefault","key","document","getElementById"],"mappings":"8RAeO,IAAMA,EAAuB,CAAEC,KAAM,GAAIC,KAAM,GAAIC,MAAO,IAE3DC,EAAe,SAAC,GAAD,IAAGH,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACnBG,IAAQ,EAAGJ,GAAMK,KAAI,kBAAMD,IAAQ,EAAGH,GAAMK,KAAK,OAE7CC,EAAY,WAAmD,IAAD,yDAAzBR,EAAtBC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,MACzBM,EAAQ,CACZC,QAAS,CAAET,OAAMC,OAAMC,SACvBQ,QAAS,KACTC,QAAS,KACTC,UAAWV,EACXW,WAAYb,EAAOC,EAAOC,GAM5B,OAHAM,EAAMM,QAAUX,EAAaK,EAAMC,SACnCD,EAAMO,MAAQP,EAAMM,QAAQT,KAAI,SAAAW,GAAG,OAAIA,EAAIX,KAAI,iBAAM,eAE9CG,GAGHS,EAAW,SAAXA,EAAYT,EAAD,GAA0B,IAAhBQ,EAAe,EAAfA,IAAKE,EAAU,EAAVA,IAC9B,GAAIV,EAAMG,QAAS,OAAOH,EADc,IAGlCM,EAAYN,EAAZM,QACDN,EAAME,SAwEb,SAAoBK,EAApB,EAAkDC,EAAKE,GAAM,IAAhClB,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MACvC,KAAOA,GAAO,CACZ,IAAMiB,EAAIC,KAAKC,MAAMD,KAAKE,SAAWtB,GAC/BuB,EAAIH,KAAKC,MAAMD,KAAKE,SAAWrB,GAEhCc,EAAMI,GAAGI,IAAMJ,IAAMH,GAAOO,IAAML,IACrCH,EAAMI,GAAGI,GAAK,OACdrB,IAEAsB,EAAOL,EAAGI,EAAGvB,EAAMC,GAAM,SAACwB,EAAIC,GACC,kBAAlBX,EAAMU,GAAIC,IACnBX,EAAMU,GAAIC,UAjFhBC,CADAb,EAAUX,EAAaK,EAAMC,SACTD,EAAMC,QAASO,EAAKE,GAG1C,IAAMU,EAAYpB,EAAMO,MAAMC,GAAKE,GACnC,GAAkB,WAAdU,GAAwC,aAAdA,EAA0B,OAAOpB,EAE/D,IAAMqB,EAAQf,EAAQE,GAAKE,GAEvBY,EAAW1B,IAAaI,EAAO,CACjCO,MAAOX,IAASY,EAAKZ,IAASc,EAAKW,GAAQrB,EAAMO,OACjDL,QAASF,EAAME,SAAWqB,KAAKC,MAC/BnB,WAAYL,EAAMK,WAAa,EAC/BC,YAGF,GAAc,IAAVe,EAAa,OAEQrB,EAAMC,QAC7Be,EAAOR,EAAKE,EAHG,EAEPlB,KAFO,EAEDC,MACe,SAACkB,EAAGI,GAC/BO,EAAWb,EAASa,EAAU,CAAEd,IAAKG,EAAGD,IAAKK,WAE5B,SAAVM,GACTC,EAASG,KAAM,EACfH,EAASnB,QAAUoB,KAAKC,OACS,IAAxBF,EAASjB,aAClBiB,EAASG,KAAM,EACfH,EAASnB,QAAUoB,KAAKC,OAG1B,OAAO5B,IAAaI,EAAOsB,IAGvBI,EAAW,SAAC1B,EAAD,GAA0B,IAAhBQ,EAAe,EAAfA,IAAKE,EAAU,EAAVA,IAC9B,GAAIV,EAAMG,QAAS,OAAOH,EAE1B,IAaMO,EAAQX,IAASY,EAAKZ,IAASc,GAbnB,SAAAiB,GAChB,OAAQA,GACN,IAAK,SACH,MAAO,OACT,IAAK,OACH,MAAO,WACT,IAAK,WACH,MAAO,SACT,QACE,OAAOA,MAIyC3B,EAAMO,OACtDqB,EACgB,SAApBrB,EAAMC,GAAKE,IAAmB,EAA8B,SAA1BV,EAAMO,MAAMC,GAAKE,GAAkB,EAAK,EACtEN,EAAYJ,EAAMI,UAAYwB,EAEpC,OAAOhC,IAAaI,EAAO,CACzBO,QACAH,eAIEyB,EAAY,SAAA7B,GAChB,OAAOJ,IAAaI,EAAO,CACzBO,MAAOP,EAAMO,MAAMV,KAAI,SAACW,EAAKsB,GAAN,OACrBtB,EAAIX,KAAI,SAAC8B,EAAMI,GACb,IAAMV,EAAQrB,EAAMM,QAAQwB,GAAIC,GAChC,MAAgB,SAATJ,GAA6B,SAAVN,EAAmB,aAAeA,WAwBpE,SAASL,EAAOL,EAAGI,EAAGvB,EAAMC,EAAMuC,GAChC,IAAK,IAAIF,GAAM,EAAGA,EAAK,EAAGA,IACxB,IAAK,IAAIC,GAAM,EAAGA,EAAK,EAAGA,IAAM,CAC9B,IAAMd,EAAKN,EAAImB,EACTZ,EAAKH,EAAIgB,EAGbd,GAAM,GACNA,EAAKzB,GACL0B,GAAM,GACNA,EAAKzB,IACHwB,IAAON,GAAKO,IAAOH,IAErBiB,EAAGf,EAAIC,ICtIA,IAsETe,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,QAAb,OACjB,yBAAKC,UAAU,cACb,yBAAKA,UAAU,uBAAuBF,GACtC,yBAAKE,UAAU,sBACb,4BAAQC,QAASF,GAAjB,SAiBAG,EAAW,SAAC,GAA0B,IAAxBpC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACrBoC,EAASC,cACfC,IAAMC,WAAU,WACd,GAAKxC,IAAWC,EAAhB,CACA,IAAMwC,EAAMC,YAAYL,EAAQ,KAChC,OAAO,kBAAMM,cAAcF,OAE1B,CAACzC,EAASC,IAEb,IAAM2C,EAAO5C,EArBI,SAAA6C,GACjB,IAAMC,KAAOD,EAAK,IAAIE,WAChBC,MAAQH,EAAK,IAAM,IAAIE,WACvBE,MAAQJ,EAAK,OAAOE,WAEpBG,GAAmB,IAAbJ,EAAEK,OAAe,IAAM,IAAML,EAIzC,MAAO,CAFU,MAANG,EAAY,GAAKA,EADX,MAAND,EAAY,IAAmB,IAAbA,EAAEG,OAAe,IAAM,IAAMH,EAG1CE,GAAIE,OAAOC,SAASC,KAAK,KAarCC,GAAatD,GAAWoB,KAAKC,OAAStB,GAAW,KACjD,IAEJ,OAAO,uCAAa4C,IAGhBY,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACTlB,IAAMmB,UAAS,WACxC,IAAMC,EAAM,yBAEZ,OAAOC,IAAW,CAChBtE,KAAMsE,MAEHC,SAASF,GACTG,IAAI,IACJC,IAAI,IACPxE,KAAMqE,MAEHC,SAASF,GACTG,IAAI,IACJC,IAAI,IACPvE,MAAOoE,MAEJC,SAASF,GACTG,IAAI,IACJC,IAAI,KACJC,KAAK,QAAS,kBAAkB,WAAY,IAAD,EACZC,KAAKC,OACnC,OAF0C,EAClC1E,OADkC,EAC3BF,KAD2B,EACrBC,MACU,WArBhC4E,EAD6B,oBA2B9BC,EAAc,SAACC,EAAMC,GAAP,OAClB,yBAAKpC,UAAU,SACb,+BACE,0BAAMA,UAAU,gBAAgBoC,GAChC,kBAAC,IAAD,CAAOD,KAAMA,EAAME,KAAK,YAE1B,kBAAC,IAAD,CAAcF,KAAMA,EAAMG,UAAU,MAAMtC,UAAU,mBAIxD,OACE,kBAAC,IAAD,CACEuC,cAAepF,EACf8E,iBAAkBA,EAClBO,SAAUjB,IAET,kBACC,kBAAC,IAAD,CAAMvB,UAAU,gBACbkC,EAAY,OAAQ,SACpBA,EAAY,OAAQ,YACpBA,EAAY,QAAS,UAEtB,4BAAQG,KAAK,SAASrC,UAAU,YAAhC,kBChKVyC,IAASC,OAAO,mBDID,WAAO,IAAD,EACmBrC,IAAMmB,WADzB,mBACZmB,EADY,KACCC,EADD,ODJZC,oBACL,iBAAO,CACLC,MAAO,SAAAjF,GAAO,OAAI,kBAAMF,EAAUE,KAClCkF,KAAM,SAAC3E,EAAKE,GAAN,OAAc,SAAAV,GAAK,OAAIS,EAAST,EAAO,CAAEQ,MAAKE,UACpD0E,KAAM,SAAC5E,EAAKE,GAAN,OAAc,SAAAV,GAAK,OAAI0B,EAAS1B,EAAO,CAAEQ,MAAKE,UACpDmB,UAAW,kBAAMA,MAEnB9B,GCHiB,mBAEZsF,EAFY,KAENC,EAFM,KAGnB7C,IAAMC,WAAU,kBAAM4C,EAAYJ,MAAMH,KAAc,CACpDA,EACAO,IALiB,MAQc7C,IAAMmB,WARpB,mBAQZ2B,EARY,KAQCC,EARD,KAmBnB,OAVA/C,IAAMC,WAAU,WACd2C,EAAKlF,SAAWqF,GAAU,KACzB,CAACH,EAAKlF,UACTqC,qBACE,YAAwB,IAAtBiD,EAAqB,oBACrBJ,EAAKlF,UAAYoF,GAAeE,GAAmBH,EAAYzD,cAEjE,CAAC0D,EAAaF,EAAKlF,UAInB,6BACE,kBAAC,EAAD,CACEwD,SAAU,SAAA+B,GACRV,EAAe,eAAKU,IACpBF,GAAU,MAGd,6BAEA,yBAAKpD,UAAU,UACb,yBAAKA,UAAU,UACb,6BACE,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAUlC,QAASmF,EAAKnF,QAASC,QAASkF,EAAKlF,UAC/C,wCAAckF,EAAKjF,YAGrB,yBAAKgC,UAAU,cACb,2BAAOuD,cAAe,SAAAC,GAAE,OAAIA,EAAGC,mBAC7B,+BACGR,EAAK9E,MAAMV,KAAI,SAACW,EAAKsB,GAAN,OACd,wBAAIgE,IAAKhE,GACNtB,EAAIX,KAAI,SAAC8B,EAAMI,GAAP,OACP,wBACE+D,IAAK/D,EACLK,UAAS,eAAUT,GACnBU,QAAS,kBAAMiD,EAAYH,KAAKrD,EAAIC,IACpC4D,cAAe,kBAAML,EAAYF,KAAKtD,EAAIC,KAEzCJ,gBAYpB4D,GACC,kBAAC,EAAD,CAAYpD,QAAS,kBAAMqD,GAAU,KAClCH,EAAK5D,IAAM,WAAa,gBCnEnB,MAASsE,SAASC,eAAe,W","file":"static/js/main.d6e51338.chunk.js","sourcesContent":["import * as R from 'ramda'\nimport { useLogic } from '@dhmk/hooks'\n\nexport function useGame() {\n  return useLogic(\n    () => ({\n      reset: options => () => resetGame(options),\n      open: (row, col) => state => openCell(state, { row, col }),\n      mark: (row, col) => state => markCell(state, { row, col }),\n      revealAll: () => revealAll,\n    }),\n    resetGame,\n  )\n}\n\nexport const DEFAULT_GAME_OPTIONS = { rows: 10, cols: 10, mines: 10 }\n\nconst createValues = ({ rows, cols }) =>\n  R.range(0, rows).map(() => R.range(0, cols).fill(0))\n\nconst resetGame = ({ rows, cols, mines } = DEFAULT_GAME_OPTIONS) => {\n  const state = {\n    options: { rows, cols, mines },\n    started: null,\n    stopped: null,\n    minesLeft: mines,\n    _cellsLeft: rows * cols - mines,\n  }\n\n  state._values = createValues(state.options)\n  state.field = state._values.map(row => row.map(() => 'closed'))\n\n  return state\n}\n\nconst openCell = (state, { row, col }) => {\n  if (state.stopped) return state\n\n  let { _values } = state\n  if (!state.started) {\n    _values = createValues(state.options)\n    placeMines(_values, state.options, row, col)\n  }\n\n  const cellState = state.field[row][col]\n  if (cellState !== 'closed' && cellState !== 'question') return state\n\n  const value = _values[row][col]\n\n  let newState = R.mergeRight(state, {\n    field: R.adjust(row, R.update(col, value), state.field),\n    started: state.started || Date.now(), // not so FP, but quick\n    _cellsLeft: state._cellsLeft - 1,\n    _values,\n  })\n\n  if (value === 0) {\n    // optimize this case with mutable temp?\n    const { rows, cols } = state.options\n    around(row, col, rows, cols, (r, c) => {\n      newState = openCell(newState, { row: r, col: c })\n    })\n  } else if (value === 'mine') {\n    newState.won = false\n    newState.stopped = Date.now()\n  } else if (newState._cellsLeft === 0) {\n    newState.won = true\n    newState.stopped = Date.now()\n  }\n\n  return R.mergeRight(state, newState)\n}\n\nconst markCell = (state, { row, col }) => {\n  if (state.stopped) return state\n\n  const _markCell = cell => {\n    switch (cell) {\n      case 'closed':\n        return 'flag'\n      case 'flag':\n        return 'question'\n      case 'question':\n        return 'closed'\n      default:\n        return cell\n    }\n  }\n\n  const field = R.adjust(row, R.adjust(col, _markCell), state.field)\n  const minesDiff =\n    field[row][col] === 'flag' ? -1 : state.field[row][col] === 'flag' ? +1 : 0\n  const minesLeft = state.minesLeft + minesDiff\n\n  return R.mergeRight(state, {\n    field,\n    minesLeft,\n  })\n}\n\nconst revealAll = state => {\n  return R.mergeRight(state, {\n    field: state.field.map((row, ri) =>\n      row.map((cell, ci) => {\n        const value = state._values[ri][ci]\n        return cell === 'flag' && value !== 'mine' ? 'mine-wrong' : value\n      }),\n    ),\n  })\n}\n\nfunction placeMines(field, { rows, cols, mines }, row, col) {\n  while (mines) {\n    const r = Math.floor(Math.random() * rows)\n    const c = Math.floor(Math.random() * cols)\n\n    if (!field[r][c] && r !== row && c !== col) {\n      field[r][c] = 'mine'\n      mines--\n\n      around(r, c, rows, cols, (r1, c1) => {\n        if (typeof field[r1][c1] === 'number') {\n          field[r1][c1]++\n        }\n      })\n    }\n  }\n}\n\nfunction around(r, c, rows, cols, fn) {\n  for (let ri = -1; ri < 2; ri++)\n    for (let ci = -1; ci < 2; ci++) {\n      const r1 = r + ri\n      const c1 = c + ci\n\n      if (\n        r1 >= 0 &&\n        r1 < rows &&\n        c1 >= 0 &&\n        c1 < cols &&\n        !(r1 === r && c1 === c)\n      ) {\n        fn(r1, c1)\n      }\n    }\n}\n","import React from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\nimport * as yup from 'yup'\nimport * as hooks from '@dhmk/hooks'\n\nimport './App.scss'\nimport { useGame, DEFAULT_GAME_OPTIONS } from './game'\n\nexport default () => {\n  const [gameOptions, setGameOptions] = React.useState()\n  const [game, gameActions] = useGame()\n  React.useEffect(() => gameActions.reset(gameOptions), [\n    gameOptions,\n    gameActions,\n  ])\n\n  const [modalOpened, showModal] = React.useState()\n  React.useEffect(() => {\n    game.stopped && showModal(true)\n  }, [game.stopped])\n  hooks.useEffectPrevious(\n    ([prevModalOpened]) => {\n      game.stopped && !modalOpened && prevModalOpened && gameActions.revealAll()\n    },\n    [modalOpened, game.stopped],\n  )\n\n  return (\n    <div>\n      <GameOptions\n        onChange={opts => {\n          setGameOptions({ ...opts }) /* trick to force render */\n          showModal(false)\n        }}\n      />\n      <hr />\n\n      <div className=\"wrap-1\">\n        <div className=\"wrap-2\">\n          <div>\n            <div className=\"game-stats\">\n              <GameTime started={game.started} stopped={game.stopped} />\n              <span>Mines: {game.minesLeft}</span>\n            </div>\n\n            <div className=\"game-field\">\n              <table onContextMenu={ev => ev.preventDefault()}>\n                <tbody>\n                  {game.field.map((row, ri) => (\n                    <tr key={ri}>\n                      {row.map((cell, ci) => (\n                        <td\n                          key={ci}\n                          className={`cell-${cell}`}\n                          onClick={() => gameActions.open(ri, ci)}\n                          onContextMenu={() => gameActions.mark(ri, ci)}\n                        >\n                          {cell}\n                        </td>\n                      ))}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modalOpened && (\n        <MessageBox onClose={() => showModal(false)}>\n          {game.won ? 'You win!' : 'You lose!'}\n        </MessageBox>\n      )}\n    </div>\n  )\n}\n\nconst MessageBox = ({ children, onClose }) => (\n  <div className=\"messagebox\">\n    <div className=\"messagebox__content\">{children}</div>\n    <div className=\"messagebox__footer\">\n      <button onClick={onClose}>OK</button>\n    </div>\n  </div>\n)\n\nconst formatTime = ts => {\n  const s = (~~ts % 60).toString()\n  const m = (~~(ts / 60) % 60).toString()\n  const h = (~~(ts / 3600)).toString()\n\n  const ss = (s.length === 1 ? '0' : '') + s\n  const mm = m === '0' ? '' : (m.length === 1 ? '0' : '') + m\n  const hh = h === '0' ? '' : h\n\n  return [hh, mm, ss].filter(Boolean).join(':')\n}\n\nconst GameTime = ({ started, stopped }) => {\n  const update = hooks.useUpdate()\n  React.useEffect(() => {\n    if (!started || stopped) return\n    const tid = setInterval(update, 1000)\n    return () => clearInterval(tid)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [started, stopped])\n\n  const time = started\n    ? formatTime(((stopped || Date.now()) - started) / 1000)\n    : '-'\n\n  return <span>Time: {time}</span>\n}\n\nconst GameOptions = ({ onChange }) => {\n  const [validationSchema] = React.useState(() => {\n    const req = 'This value is required'\n\n    return yup.object({\n      rows: yup\n        .number()\n        .required(req)\n        .min(10)\n        .max(30),\n      cols: yup\n        .number()\n        .required(req)\n        .min(10)\n        .max(30),\n      mines: yup\n        .number()\n        .required(req)\n        .min(10)\n        .max(100)\n        .test('mines', 'Too much mines', function() {\n          const { mines, rows, cols } = this.parent\n          return mines / (rows * cols) < 0.3\n        }),\n    })\n  })\n\n  const renderField = (name, label) => (\n    <div className=\"field\">\n      <label>\n        <span className=\"field__label\">{label}</span>\n        <Field name={name} type=\"number\" />\n      </label>\n      <ErrorMessage name={name} component=\"div\" className=\"field__error\" />\n    </div>\n  )\n\n  return (\n    <Formik\n      initialValues={DEFAULT_GAME_OPTIONS}\n      validationSchema={validationSchema}\n      onSubmit={onChange}\n    >\n      {() => (\n        <Form className=\"game-options\">\n          {renderField('rows', 'Rows:')}\n          {renderField('cols', 'Columns:')}\n          {renderField('mines', 'Mines:')}\n\n          <button type=\"submit\" className=\"new-game\">\n            New game!\n          </button>\n        </Form>\n      )}\n    </Formik>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}